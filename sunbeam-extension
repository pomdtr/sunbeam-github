#!/bin/sh

set -eu

# check if gh is installed
if ! command -v gh >/dev/null 2>&1; then
    echo "gh is not installed"
    exit 1
fi

if [ $# -eq 0 ]; then
sunbeam query -n '{
    title: "GitHub",
    commands: [
        {name: "search-repos", mode: "view", title: "Search Repositories"},
        {name: "list-repos", mode: "view", title: "List Repositories"},
        {name: "list-prs", mode: "view", title: "List Pull Requests", params: [{name: "repo", type: "string"}]},
        {name: "create-repo", mode: "view", title: "Create Repository"}
    ]
}'
exit 0
fi

if [ "$1" = "list-repos" ]; then
    # shellcheck disable=SC2016
    gh api "/user/repos?sort=updated" | sunbeam query '.[] |
        {
            title: .full_name,
            subtitle: (.description // ""),
            actions: [
                { title: "Open in Browser", onAction: { type: "open", target: .html_url, exit: true }},
                { title: "Copy URL", key: "o", onAction: {type: "copy",  text: .html_url, exit: true} },
                { title: "List Pull Requests", key: "p", onAction: { type: "run", command: "list-prs", params: { repo: .full_name }}}
            ]
        }
    ' | sunbeam query -s '{type: "list", items: .}'
elif [ "$1" = "search-repos" ]; then
    QUERY=$(sunbeam query '.query')
    if [ "$QUERY" = "null" ]; then
        sunbeam query -n '{type: "list", reload: true, items: []}'
        exit 0
    fi

    gh api "search/repositories?q=$QUERY" | sunbeam query '.items[] |
        {
            title: .full_name,
            subtitle: (.description // ""),
            actions: [
                { title: "Open in Browser", onAction: { type: "open", target: .html_url, exit: true }},
                { title: "Copy URL", key: "o", onAction: {type: "copy",  text: .html_url, exit: true} },
                { title: "List Pull Requests", key: "p", onAction: { type: "run", command: "list-prs", params: { repo: .full_name }}}
            ]
        }
    ' | sunbeam query -s '{type: "list", reload: true, items: .}'
elif [ "$1" = "list-prs" ]; then
    REPOSITORY=$(sunbeam query -r '.params.repo')
    gh pr list --repo "$REPOSITORY" --json author,title,url,number | sunbeam query '.[] |
    {
        title: .title,
        subtitle: .author.login,
        accessories: [
            "#\(.number)"
        ],
        actions: [
            {title: "Open in Browser", onAction: { type: "open", target: .url, exit: true}},
            {title: "Copy URL", key: "c", onAction: { type: "copy", text: .url, exit: true}}
        ]
    }
    ' | sunbeam query -s '{type: "list", items: .}'
elif [ "$1" = "create-repo" ]; then
    FORMDATA=$(sunbeam query -r '.formData')
    if [ "$FORMDATA" = "null" ]; then
        sunbeam query -n '{
            type: "form",
            title: "Create Repository",
            items: [
                {name: "name", type: "text", title: "Name"},
                {name: "description", type: "text", title: "Description"},
                {name: "private", type: "checkbox", title: "Private", label: "Whether the repository is private or not"}
            ]
        }'
        exit 0
    fi

    NAME=$(echo "$FORMDATA" | sunbeam query -r '.name')
    DESCRIPTION=$(echo "$FORMDATA" | sunbeam query -r '.description')
    PRIVATE=$(echo "$FORMDATA" | sunbeam query -r '.private')

    if [ "$PRIVATE" = "true" ]; then
        gh repo create "$NAME" --description "$DESCRIPTION" --private
    else
        gh repo create "$NAME" --description "$DESCRIPTION"
    fi

    # shellcheck disable=SC2016
    sunbeam query -n --arg name="$NAME" '{
        type: "copy",
        exit: true,
        text: "Repository \($name) created successfully!",
    }'
fi
